{"version":3,"file":"react-native-speedometer.min.js","sources":["../src/utils/limit-value.js","../src/style/index.js","../src/index.js","../src/utils/calculate-degree-from-labels.js","../src/utils/calculate-label-from-value.js","../src/utils/validate-size.js"],"sourcesContent":["/* eslint radix: [\"error\", \"as-needed\"] */\r\n/* eslint-disable no-restricted-globals */\r\nfunction limitValue(value, minValue, maxValue, allowedDecimals) {\r\n  let currentValue = 0;\r\n  if (!isNaN(value)) {\r\n    if (!isNaN(allowedDecimals) && allowedDecimals > 0) {\r\n      currentValue = parseFloat(value).toFixed(allowedDecimals < 4 ? parseInt(allowedDecimals) : 4);\r\n    } else {\r\n      currentValue = parseInt(value);\r\n    }\r\n  }\r\n  return Math.min(Math.max(currentValue, minValue), maxValue);\r\n}\r\n\r\nexport default limitValue;\r\n","/* eslint import/no-unresolved: [2, { ignore: ['react-native'] }] */\r\nimport { StyleSheet, Dimensions } from 'react-native';\r\n\r\nexport const { width } = Dimensions.get('window');\r\n\r\nexport default StyleSheet.create({\r\n  wrapper: {\r\n    marginVertical: 5,\r\n    alignSelf: 'center',\r\n  },\r\n  // Circular Container\r\n  circleWrapper: {\r\n    overflow: 'hidden',\r\n  },\r\n  outerCircle: {\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n    borderColor: '#ffffff',\r\n    backgroundColor: '#e6e6e6',\r\n  },\r\n  halfCircle: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    borderTopRightRadius: 0,\r\n    borderBottomRightRadius: 0,\r\n  },\r\n  imageWrapper: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    zIndex: 10,\r\n  },\r\n  image: {\r\n    resizeMode: 'stretch',\r\n    height: width - 20,\r\n    width: width - 20,\r\n  },\r\n  innerCircle: {\r\n    overflow: 'hidden',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n    backgroundColor: '#ffffff',\r\n    width: width * 0.6,\r\n    height: (width / 2) * 0.6,\r\n    borderTopLeftRadius: width / 2 - 10,\r\n    borderTopRightRadius: width / 2 - 10,\r\n  },\r\n  labelWrapper: {\r\n    marginVertical: 5,\r\n    alignItems: 'center',\r\n  },\r\n  label: {\r\n    fontSize: 25,\r\n    fontWeight: 'bold',\r\n  },\r\n  labelNote: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","/* eslint import/no-unresolved: [2, { ignore: ['react-native', 'react'] }] */\r\n/* eslint radix: [\"error\", \"as-needed\"] */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  View,\r\n  Image,\r\n  Animated,\r\n  Easing,\r\n  Text,\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Utils\r\nimport calculateDegreeFromLabels from './utils/calculate-degree-from-labels';\r\nimport calculateLabelFromValue from './utils/calculate-label-from-value';\r\nimport limitValue from './utils/limit-value';\r\nimport validateSize from './utils/validate-size';\r\n\r\n// Style\r\nimport style, { width as deviceWidth } from './style';\r\n\r\n// eslint-disable-next-line react/prefer-stateless-function\r\nclass Speedometer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.speedometerValue = new Animated.Value(props.defaultValue);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      size,\r\n      minValue,\r\n      maxValue,\r\n      easeDuration,\r\n      allowedDecimals,\r\n      labels,\r\n      needleImage,\r\n      wrapperStyle,\r\n      outerCircleStyle,\r\n      halfCircleStyle,\r\n      imageWrapperStyle,\r\n      imageStyle,\r\n      innerCircleStyle,\r\n      labelWrapperStyle,\r\n      labelStyle,\r\n      labelNoteStyle,\r\n      useNativeDriver,\r\n    } = this.props;\r\n    const degree = 180;\r\n    const perLevelDegree = calculateDegreeFromLabels(degree, labels);\r\n    const label = calculateLabelFromValue(\r\n      limitValue(value, minValue, maxValue, allowedDecimals), labels, minValue, maxValue,\r\n    );\r\n    Animated.timing(\r\n      this.speedometerValue,\r\n      {\r\n        toValue: limitValue(value, minValue, maxValue, allowedDecimals),\r\n        duration: easeDuration,\r\n        easing: Easing.linear,\r\n        useNativeDriver,\r\n      },\r\n    ).start();\r\n\r\n    const rotate = this.speedometerValue.interpolate({\r\n      inputRange: [minValue, maxValue],\r\n      outputRange: ['-90deg', '90deg'],\r\n    });\r\n\r\n    const currentSize = validateSize(size, deviceWidth - 20);\r\n    return (\r\n      <View style={[style.wrapper, {\r\n        width: currentSize,\r\n        height: currentSize / 2,\r\n      }, wrapperStyle]}\r\n      >\r\n        <View style={[style.outerCircle, {\r\n          width: currentSize,\r\n          height: currentSize / 2,\r\n          borderTopLeftRadius: currentSize / 2,\r\n          borderTopRightRadius: currentSize / 2,\r\n        }, outerCircleStyle]}\r\n        >\r\n          {labels.map((level, index) => {\r\n            const circleDegree = 90 + (index * perLevelDegree);\r\n            return (\r\n              <View\r\n                key={level.name}\r\n                style={[style.halfCircle, {\r\n                  backgroundColor: level.activeBarColor,\r\n                  width: currentSize / 2,\r\n                  height: currentSize,\r\n                  borderRadius: currentSize / 2,\r\n                  transform: [\r\n                    { translateX: currentSize / 4 },\r\n                    { rotate: `${circleDegree}deg` },\r\n                    { translateX: (currentSize / 4 * -1) },\r\n                  ],\r\n                }, halfCircleStyle]}\r\n              />\r\n            );\r\n          })}\r\n          <Animated.View style={[style.imageWrapper,\r\n            {\r\n              top: -(currentSize / 15),\r\n              transform: [{ rotate }],\r\n            },\r\n            imageWrapperStyle]}\r\n          >\r\n            <Image\r\n              style={[style.image,\r\n                {\r\n                  width: currentSize,\r\n                  height: currentSize,\r\n                }, imageStyle]}\r\n              source={needleImage}\r\n            />\r\n          </Animated.View>\r\n          <View style={[style.innerCircle, {\r\n            width: currentSize * 0.6,\r\n            height: (currentSize / 2) * 0.6,\r\n            borderTopLeftRadius: currentSize / 2,\r\n            borderTopRightRadius: currentSize / 2,\r\n          }, innerCircleStyle]}\r\n          />\r\n        </View>\r\n        <View style={[style.labelWrapper, labelWrapperStyle]}>\r\n          <Text style={\r\n            [style.label, labelStyle]}\r\n          >\r\n            {limitValue(value, minValue, maxValue, allowedDecimals)}\r\n          </Text>\r\n          <Text style={\r\n            [style.labelNote, { color: label.labelColor }, labelNoteStyle]}\r\n          >\r\n            {label.name}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nSpeedometer.defaultProps = {\r\n  defaultValue: 50,\r\n  minValue: 0,\r\n  maxValue: 100,\r\n  easeDuration: 500,\r\n  allowedDecimals: 0,\r\n  labels: [\r\n    {\r\n      name: 'Pathetically weak',\r\n      labelColor: '#ff2900',\r\n      activeBarColor: '#ff2900',\r\n    },\r\n    {\r\n      name: 'Very weak',\r\n      labelColor: '#ff5400',\r\n      activeBarColor: '#ff5400',\r\n    },\r\n    {\r\n      name: 'So-so',\r\n      labelColor: '#f4ab44',\r\n      activeBarColor: '#f4ab44',\r\n    },\r\n    {\r\n      name: 'Fair',\r\n      labelColor: '#f2cf1f',\r\n      activeBarColor: '#f2cf1f',\r\n    },\r\n    {\r\n      name: 'Strong',\r\n      labelColor: '#14eb6e',\r\n      activeBarColor: '#14eb6e',\r\n    },\r\n    {\r\n      name: 'Unbelievably strong',\r\n      labelColor: '#00ff6b',\r\n      activeBarColor: '#00ff6b',\r\n    },\r\n  ],\r\n  needleImage: require('../images/speedometer-needle.png'),\r\n  wrapperStyle: {},\r\n  outerCircleStyle: {},\r\n  halfCircleStyle: {},\r\n  imageWrapperStyle: {},\r\n  imageStyle: {},\r\n  innerCircleStyle: {},\r\n  labelWrapperStyle: {},\r\n  labelStyle: {},\r\n  labelNoteStyle: {},\r\n  useNativeDriver: true,\r\n};\r\n\r\nSpeedometer.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  defaultValue: PropTypes.number,\r\n  size: PropTypes.number,\r\n  minValue: PropTypes.number,\r\n  maxValue: PropTypes.number,\r\n  easeDuration: PropTypes.number,\r\n  allowedDecimals: PropTypes.number,\r\n  labels: PropTypes.array,\r\n  needleImage: PropTypes.any,\r\n  wrapperStyle: PropTypes.object,\r\n  outerCircleStyle: PropTypes.object,\r\n  halfCircleStyle: PropTypes.object,\r\n  imageWrapperStyle: PropTypes.object,\r\n  imageStyle: PropTypes.object,\r\n  innerCircleStyle: PropTypes.object,\r\n  labelWrapperStyle: PropTypes.object,\r\n  labelStyle: PropTypes.object,\r\n  labelNoteStyle: PropTypes.object,\r\n  useNativeDriver: PropTypes.bool,\r\n};\r\n\r\nexport default Speedometer;\r\n","function calculateDegreeFromLabels(degree, labels) {\r\n  const perLevelDegree = (degree) / (labels.length);\r\n  return perLevelDegree;\r\n}\r\n\r\nexport default calculateDegreeFromLabels;\r\n","function calculateLabelFromValue(value, labels, minValue, maxValue) {\r\n  const currentValue = (value - minValue) / (maxValue - minValue);\r\n  const currentIndex = Math.round((labels.length - 1) * currentValue);\r\n  const label = labels[currentIndex];\r\n  return label;\r\n}\r\n\r\nexport default calculateLabelFromValue;\r\n","/* eslint radix: [\"error\", \"as-needed\"] */\r\n/* eslint-disable no-restricted-globals */\r\nfunction validateSize(current, original) {\r\n  let currentSize = original;\r\n  if (!isNaN(current)) {\r\n    currentSize = parseInt(current);\r\n  }\r\n  return currentSize;\r\n}\r\n\r\nexport default validateSize;\r\n"],"names":["limitValue","value","minValue","maxValue","allowedDecimals","currentValue","isNaN","parseFloat","toFixed","parseInt","Math","min","max","width","Dimensions","get","StyleSheet","create","wrapper","marginVertical","alignSelf","circleWrapper","overflow","outerCircle","justifyContent","alignItems","borderColor","backgroundColor","halfCircle","position","top","left","borderTopRightRadius","borderBottomRightRadius","imageWrapper","zIndex","image","resizeMode","height","innerCircle","borderTopLeftRadius","labelWrapper","label","fontSize","fontWeight","labelNote","Speedometer","props","speedometerValue","Animated","Value","defaultValue","render","this","size","easeDuration","labels","needleImage","wrapperStyle","outerCircleStyle","halfCircleStyle","imageWrapperStyle","imageStyle","innerCircleStyle","labelWrapperStyle","labelStyle","labelNoteStyle","useNativeDriver","perLevelDegree","degree","length","calculateDegreeFromLabels","round","calculateLabelFromValue","timing","toValue","duration","easing","Easing","linear","start","rotate","interpolate","inputRange","outputRange","currentSize","current","original","validateSize","deviceWidth","React","View","style","map","level","index","circleDegree","key","name","activeBarColor","borderRadius","transform","translateX","Image","source","Text","color","labelColor","Component","defaultProps","require","propTypes","PropTypes","number","isRequired","array","any","object","bool"],"mappings":"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"}