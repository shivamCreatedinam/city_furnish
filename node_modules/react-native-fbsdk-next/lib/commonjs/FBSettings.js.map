{"version":3,"sources":["FBSettings.ts"],"names":["Settings","NativeModules","FBSettings","getAdvertiserTrackingEnabled","Platform","OS","Promise","resolve","setAdvertiserTrackingEnabled","ATE","setDataProcessingOptions","options","country","state","initializeSDK","setAppID","appID","length","Error"],"mappings":";;;;;;;AASA;;AACA;;AAVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,MAAMA,QAAQ,GAAGC,2BAAcC,UAA/B;eAEe;AACb;AACF;AACA;AACA;AACEC,EAAAA,4BAA4B,GAAqB;AAC/C,QAAIC,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AACzB,aAAOL,QAAQ,CAACG,4BAAT,EAAP;AACD,KAFD,MAEO;AACL,aAAOG,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD;AACF,GAXY;;AAYb;AACF;AACA;AACA;AACEC,EAAAA,4BAA4B,CAACC,GAAD,EAAiC;AAC3D,QAAIL,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AACzB,aAAOL,QAAQ,CAACQ,4BAAT,CAAsCC,GAAtC,CAAP;AACD,KAFD,MAEO;AACL,aAAOH,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;AACD;AACF,GAtBY;;AAuBb;AACF;AACA;AACEG,EAAAA,wBAAwB,CAACC,OAAD,EAAiD;AACvE,QAAIC,OAAO,GAAG,CAAd;;AACA,QAAI,8DAAmB,QAAvB,EAAiC;AAC/BA,MAAAA,OAAO,mDAAP;AACD;;AACD,QAAIC,KAAK,GAAG,CAAZ;;AACA,QAAI,8DAAmB,QAAvB,EAAiC;AAC/BA,MAAAA,KAAK,mDAAL;AACD;;AACDb,IAAAA,QAAQ,CAACU,wBAAT,CAAkCC,OAAlC,EAA2CC,OAA3C,EAAoDC,KAApD;AACD,GApCY;;AAqCb;AACF;AACA;AACEC,EAAAA,aAAa,GAAG;AACdd,IAAAA,QAAQ,CAACc,aAAT;AACD,GA1CY;;AA2Cb;AACF;AACA;AACEC,EAAAA,QAAQ,CAACC,KAAD,EAAgB;AACtB,QAAI,CAAC,yBAAUA,KAAV,CAAD,IAAqB,CAAC,wBAASA,KAAT,CAAtB,IAAyCA,KAAK,CAACC,MAAN,KAAiB,CAA9D,EAAiE;AAC/D,YAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;AACD;;AACDlB,IAAAA,QAAQ,CAACe,QAAT,CAAkBC,KAAlB;AACD;;AAnDY,C","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n * All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\nimport {isDefined, isString} from './util/validate';\nimport {Platform, NativeModules} from 'react-native';\n\nconst Settings = NativeModules.FBSettings;\n\nexport default {\n  /**\n   * For iOS only, get AdvertiserTrackingEnabled status.\n   * @platform ios\n   */\n  getAdvertiserTrackingEnabled(): Promise<boolean> {\n    if (Platform.OS === 'ios') {\n      return Settings.getAdvertiserTrackingEnabled();\n    } else {\n      return Promise.resolve(true);\n    }\n  },\n  /**\n   * For iOS only, set AdvertiserTrackingEnabled status, only works in iOS 14 and above.\n   * @platform ios\n   */\n  setAdvertiserTrackingEnabled(ATE: boolean): Promise<boolean> {\n    if (Platform.OS === 'ios') {\n      return Settings.setAdvertiserTrackingEnabled(ATE);\n    } else {\n      return Promise.resolve(false);\n    }\n  },\n  /**\n   * Set data processing options\n   */\n  setDataProcessingOptions(options: Array<string>, ...args: Array<number>) {\n    let country = 0;\n    if (typeof args[0] === 'number') {\n      country = args[0];\n    }\n    let state = 0;\n    if (typeof args[1] === 'number') {\n      state = args[1];\n    }\n    Settings.setDataProcessingOptions(options, country, state);\n  },\n  /**\n   * Initialize the sdk\n   */\n  initializeSDK() {\n    Settings.initializeSDK();\n  },\n  /**\n   * Set app id\n   */\n  setAppID(appID: string) {\n    if (!isDefined(appID) || !isString(appID) || appID.length === 0) {\n      throw new Error(\"setAppID expected 'appID' to be a non empty string\");\n    }\n    Settings.setAppID(appID);\n  },\n};\n"]}